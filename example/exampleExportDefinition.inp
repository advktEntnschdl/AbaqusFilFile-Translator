** We have a UEL, which has 4 nodes with displacement and nonlocal damage DOFs,
*defineElementType, element=U001, shape=quad4
** .. and a standard Abaqus CPS4, which also has also 4 nodes
*defineElementType, element=CPS4, shape=quad4
**
** NODAL VARIABLES
**
** Ensight expects that vectors have 3 components, but Abaqus writes only 2 for 2D. So we zero fill the z direction, by specifying dimensions=3
*ensightPerNodeVariableJob,   name=nodeDisplacements, dimensions=3
*ensightPerNodeVariableJobEntry, job=nodeDisplacements,  set=ALL, result=U, fillMissingValuesTo=0.0

** reaction forces are written only at the boundary, so we either need to specificy that all missing values at interior nodes are zeroed
** or we directly export them to the node sets the boundary. Still we need to fill for z-direction
*ensightPerNodeVariableJob, name=nodeReactionForces, dimensions=3, 
*ensightPerNodeVariableJobEntry, setType=elSet, set=ALL, job=nodeReactionForces, result=RF, fillMissingValuesTo=0.0
*ensightPerNodeVariableJobEntry, setType=nSet, set=SETLOAD, job=nodeReactionForces, result=RF, fillMissingValuesTo=0.0
*ensightPerNodeVariableJobEntry, setType=nSet, set=SETBOTTOM, job=nodeReactionForces, result=RF, fillMissingValuesTo=0.0
**

** nonlocal damage is a scalar, so no problem here
*ensightPerNodeVariableJob, name=nodeAlphaDNonLocal, dimensions=1
*ensightPerNodeVariableJobEntry, set=SECCONC, job=nodeAlphaDNonLocal, result=NT, 
**
**
** ELEMENTAL VARIABLES
**
** convert the UEL SDVs (which contain material SDVs + stresses and strains). 
** we need to define the periodical pattern of 4 gauss points within the SDVs, seperated by a data distance of 18, and with an initial offset of 0
** of course, this is dependent on the UEL!
**
** assumed layout of the SDV vector per UEL:
** [ [ qpInitialOffset ... ] [ DATA of QP1 ...  qpDistance -> ] [ DATA of QP 2 ... qpDistance -> ] ]

*UELSDVToQuadraturePoints, set=SECCONC, destination=ConcUelSDVs, qpCount=4, qpInitialOffset=0, qpDistance=18

** furthermore, we may want to compute the average over all SDVs
*computeAverageOverQuadraturePoints, set=SECCONC, result=ConcUelSDVs
**
** Scalar Variables are accessed in the SDV field by means of their index ....
*ensightPerElementVariableJob, name=alphaP, dimensions=1
*ensightPerElementVariableJobEntry, set=SECCONC, job=alphaP, result=ConcUelSDVs, location=computed, which=average,  values=0
*ensightPerElementVariableJob, name=alphaP, dimensions=1
*ensightPerElementVariableJobEntry, set=SECCONC, job=alphaD, result=ConcUelSDVs, location=computed, which=average,  values=2
*ensightPerElementVariableJob, name=alphaD, dimensions=1
*ensightPerElementVariableJobEntry, set=SECCONC, job=alphaP, result=ConcUelSDVs, location=computed, which=average,  values=0

*ensightPerElementVariableJob, name=stress, dimensions=6
*ensightPerElementVariableJob, name=strain, dimensions=6
**** ... and tensorial variables by means of a python slice!
*ensightPerElementVariableJobEntry, set=SECCONC, job=stress, result=ConcUelSDVs, location=computed, which=average,  values=6:12
*ensightPerElementVariableJobEntry, set=SECCONC, job=strain, result=ConcUelSDVs, location=computed, which=average,  values=12:18
******
**** Here we access standard Abaqus CPS4 results, which has 4 integration points.
**** stress and strains, and we can add them to the stress/strain collection of our UELs, so we can post-process them together in ParaView/Ensight
**** However, since we have a 2D analysis, Abaqus exports only 2D stress/strain tensors with 3 components. 
**** we need to fill them into a 3D Voigt tensor with 6 components, by using the f(x) feature!
*computeAverageOverQuadraturePoints, set=SECSTEELLOAD, result=S
*computeAverageOverQuadraturePoints, set=SECSTEELLOAD, result=E
*computeAverageOverQuadraturePoints, set=SECSTEELBOTTOM, result=S
*computeAverageOverQuadraturePoints, set=SECSTEELBOTTOM, result=E
*ensightPerElementVariableJobEntry, set=SECSTEELLOAD,   job=stress, result=S, location=computed, which=average, f(x)='[x[0], x[1], 0, x[2], 0, 0]'
*ensightPerElementVariableJobEntry, set=SECSTEELBOTTOM, job=stress, result=S, location=computed, which=average, f(x)='[x[0], x[1], 0, x[2], 0, 0]'
*ensightPerElementVariableJobEntry, set=SECSTEELLOAD,   job=strain, result=E, location=computed, which=average, f(x)='[x[0], x[1], 0, x[2], 0, 0]'
*ensightPerElementVariableJobEntry, set=SECSTEELBOTTOM, job=strain, result=E, location=computed, which=average, f(x)='[x[0], x[1], 0, x[2], 0, 0]'
